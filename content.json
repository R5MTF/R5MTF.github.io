[{"title":"python3黑客之ssh僵尸批量操作","date":"2018-03-27T14:21:26.000Z","path":"/posts/8b194e4c/","text":"&#x5E94;&#x7528;&#x573A;&#x666F;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x82E6;&#x903C;&#x7684;&#x5B89;&#x5168;&#x4ECE;&#x4E1A;&#x4EBA;&#x5458;&#xFF0C;&#x5F53;&#x67D0;&#x5929;&#x4F60;&#x6709;&#x4E00;&#x5927;&#x6279;linux&#x4E3B;&#x673A;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x6F0F;&#x6D1E;&#x6392;&#x67E5;&#xFF0C;ssh&#x6279;&#x91CF;&#x64CD;&#x4F5C;&#x6216;&#x8BB8;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x6709;&#x5927;&#x628A;&#x65F6;&#x95F4;&#x53BB;&#x64A9;&#x59B9;&#x54DF;~ Pexpect&#x6A21;&#x5757;&#x4ECB;&#x7ECD;Pexpect&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x4E0E;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x81EA;&#x52A8;&#x4EA4;&#x4E92;&#x7684;pyhon&#x6A21;&#x5757;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x8FC7;&#x542F;&#x52A8;&#x5E76;&#x63A7;&#x5236;&#x5B50;&#x7A0B;&#x5E8F;&#xFF0C;&#x4F7F;&#x7528;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x5BF9;&#x7A0B;&#x5E8F;&#x8F93;&#x51FA;&#x4F5C;&#x51FA;&#x7279;&#x5B9A;&#x54CD;&#x5E94;&#xFF0C;&#x5C31;&#x50CF;&#x4EBA;&#x7C7B;&#x5728;&#x64CD;&#x4F5C;&#x547D;&#x4EE4;&#x884C;&#x4E00;&#x6837;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x4E0E;ssh&#x3001;ftp&#x3001;telnet&#x7B49;&#x5B9E;&#x73B0;&#x81EA;&#x52A8;&#x4EA4;&#x4E92;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5C06;&#x7528;&#x5230;&#x5B83;&#x91CC;&#x9762;&#x7684;pxssh&#x7C7B;&#x6765;&#x5B9E;&#x73B0;&#x4E0E;ssh&#x7684;&#x81EA;&#x52A8;&#x4EA4;&#x4E92;&#x3002;&#x5F53;&#x7136;&#x5B83;&#x8FD8;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5B9E;&#x73B0;&#x6279;&#x91CF;&#x8F6F;&#x4EF6;&#x4E0B;&#x53D1;&#x5B89;&#x88C5;&#xFF0C;&#x8BF7;&#x5404;&#x4F4D;&#x5927;&#x795E;&#x81EA;&#x884C;&#x8111;&#x8865;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x65B9;&#x5F0F;&#x5B89;&#x88C5;&#x5B83;&#xFF1A;1.pip&#x5B89;&#x88C5;1pip install pexpect 2.&#x6E90;&#x7801;&#x5B89;&#x88C5;1python setup.py install pxssh&#x57FA;&#x672C;&#x4F7F;&#x7528;&#x6211;&#x7684;&#x73AF;&#x5883;&#x662F;kali2.0+python3.6&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x53EA;&#x8BB2;&#x5230;&#x4ECA;&#x5929;&#x7684;&#x4F7F;&#x7528;&#x8303;&#x56F4;&#xFF0C;&#x5176;&#x5B83;&#x8BF7;&#x81EA;&#x884C;&#x63A2;&#x7D22;&#x3002;&#x6211;&#x4EEC;&#x5148;&#x5BFC;&#x5165;pxssh&#x7C7B;&#xFF0C;&#x7136;&#x540E;&#x5B9E;&#x4F8B;&#x5316;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;ssh&#x8FDE;&#x63A5;&#xFF1A;123from pexpect import pxsshs = pxssh.pxssh()s.login(host,user,password) ##&#x6784;&#x5EFA;&#x6279;&#x91CF;ssh&#x811A;&#x672C;&#x56E0;&#x4E3A;&#x9700;&#x8981;&#x5BF9;&#x5927;&#x91CF;&#x4E3B;&#x673A;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x4E3A;&#x4E86;&#x7B80;&#x5316;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x4E9B;&#x4E3B;&#x673A;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x7C7B;BotNet()&#xFF0C;&#x628A;&#x8FD9;&#x4E9B;&#x4E3B;&#x673A;&#x6240;&#x5171;&#x6709;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;&#x5168;&#x90E8;&#x5728;&#x7C7B;&#x4E2D;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x5B9E;&#x4F8B;&#x5316;&#x5BF9;&#x8C61;&#x6765;&#x6279;&#x91CF;&#x64CD;&#x4F5C;&#x3002;&#x4EE5;&#x4E0B;&#x662F;BotNet(&#xFF09;&#x7C7B;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#xFF1A;1234567891011121314151617181920class BotNet: def __init__(self, host, user, password): //&#x521D;&#x59CB;&#x5316;&#x5C5E;&#x6027; self.host = host self.user = user self.password = password self.session = self.connect() def connect(self): //&#x5B9E;&#x73B0;ssh&#x8FDE;&#x63A5;&#x65B9;&#x6CD5;connect() try: s = pxssh.pxssh() s.login(self.host, self.user, self.password) return s except Exception as e: print(e) print(&apos;[-] Error Connecting&apos;) def send_command(self, cmd): //&#x5B9E;&#x73B0;&#x53D1;&#x9001;&#x547D;&#x4EE4;&#x65B9;&#x6CD5;send_command() self.session.sendline(cmd) self.session.prompt() return self.session.before &#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x51FD;&#x6570;addBotnet()&#x6765;&#x63A5;&#x6536;host&#x3001;user&#x3001;password&#x6765;&#x5B9E;&#x4F8B;&#x5316;&#x4E00;&#x4E2A;botnet&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x5B83;&#xFF0C;&#x5C06;&#x5B83;&#x6DFB;&#x52A0;&#x5230;&#x4E00;&#x4E2A;botNet&#x6570;&#x7EC4;&#x4E2D;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;123def addBotnet(host, user, password): botnet = BotNet(host, user, password) return botnet &#x7136;&#x540E;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x51FD;&#x6570;botnetCommand()&#x6765;&#x904D;&#x5386;botNet&#x6570;&#x7EC4;&#xFF0C;&#x628A;&#x8981;&#x6267;&#x884C;&#x7684;&#x547D;&#x4EE4;&#x53D1;&#x9001;&#x5230;&#x6BCF;&#x4E00;&#x4E2A;botnet&#x5BF9;&#x8C61;&#x4E0A;&#xFF0C;&#x5B9E;&#x73B0;&#x6279;&#x91CF;&#x64CD;&#x4F5C;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;123456def botnetCommand(command, botNet): for botnet in botNet: print(&apos;[+] send &apos; + command + &apos;\\n&apos;) output = botnet.send_command(command) print(&apos;[*] Output from &apos; + botnet.host) print(&apos;[+] &apos; + output + &apos;\\n&apos;) &#x6700;&#x540E;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;main()&#x51FD;&#x6570;&#x4ECE;&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#x56FA;&#x5B9A;&#x683C;&#x5F0F;&#x7684;&#x6570;&#x636E;&#xFF08;host:user:password&#xFF09;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;argparse&#x6A21;&#x5757;&#x8F93;&#x51FA;&#x7A0B;&#x5E8F;&#x7684;&#x5E2E;&#x52A9;&#x6587;&#x6863;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314151617181920def main(): parser = argparse.ArgumentParser( usage=&apos;PxsshBotNet.py -F &lt;target_filename&gt; -c &lt;cmd&gt;&apos;) parser.add_argument(&apos;-F&apos;, dest=&apos;tgtfilename&apos;, type=str, help=&apos;The filename format is host:user:password&apos;) parser.add_argument(&apos;-c&apos;, dest=&apos;cmd&apos;, type=str, help=&apos;Commands issued to botNet&apos;) args = parser.parse_args() tgtfilename = args.tgtfilename cmd = args.cmd if (tgtfilename == None): print(parser.usage) exit(0) botNet = [] with open(tgtfilename, &apos;r&apos;) as f: for line in f.readlines(): str = line.strip(&apos;\\r&apos;).strip(&apos;\\n&apos;) host, user, password = str.split(&apos;:&apos;) botNet.append(addBotnet(host, user, password)) botnetCommand(cmd, botNet) &#x6700;&#x540E;&#x6211;&#x4EEC;&#x52A0;&#x4E0A;&#x51FD;&#x6570;&#x5165;&#x53E3;&#x7A0B;&#x5E8F;&#xFF1A;12if __name__ == &apos;__main__&apos;: main() ##&#x7ED3;&#x679C;&#x9A8C;&#x8BC1;&#x4EE5;&#x4E0B;&#x4E3A;&#x6211;&#x5728;kali rolling+python3.6&#x73AF;&#x5883;&#x4E0B;&#x6D4B;&#x8BD5;&#x5F97;&#x51FA;&#x3002;&#x5E2E;&#x52A9;&#x6587;&#x6863;&#xFF1A;123456789root@kali:/home/kali# python3 PxsshBotNet.py PxsshBotNet.py -F &lt;target_filename&gt; -c &lt;cmd&gt;root@kali:/home/kali# python3 PxsshBotNet.py -husage: PxsshBotNet.py -F &lt;target_filename&gt; -c &lt;cmd&gt;optional arguments: -h, --help show this help message and exit -F TGTFILENAME The filename format is host:user:password -c CMD Commands issued to botNet &#x6267;&#x884C;whoami&#x7ED3;&#x679C;&#xFF1A;1234567891011121314151617181920root@kali:/home/kali# python3 PxsshBotNet.py -F botnet.txt -c whoami[+] send whoami[*] Output from 127.0.0.1[+] whoamir4mtf[+] send whoami[*] Output from 127.0.0.1[+] whoamir5mtf[+] send whoami[*] Output from 127.0.0.1[+] whoamir6mtf ##&#x603B;&#x7ED3;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x7840;&#x6846;&#x67B6;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x5927;&#x8868;&#x54E5;&#x53EF;&#x4EE5;&#x53BB;&#x591A;&#x591A;&#x53D1;&#x6398;&#xFF0C;&#x535A;&#x4E3B;&#x662F;&#x83DC;&#x9E1F;&#x4E00;&#x679A;&#xFF0C;&#x5199;&#x6B64;&#x535A;&#x6587;&#x4E5F;&#x662F;&#x4E3A;&#x4E86;&#x8BB0;&#x5F55;&#x77E5;&#x8BC6;&#xFF0C;&#x592F;&#x5B9E;&#x77E5;&#x8BC6;&#xFF0C;&#x629B;&#x7816;&#x5F15;&#x7389;&#xFF0C;&#x5E0C;&#x671B;&#x5404;&#x4F4D;&#x770B;&#x5230;&#x7684;&#x5927;&#x795E;&#x52FF;&#x55B7;&#xFF0C;&#x672C;&#x6587;&#x65E8;&#x5728;&#x63A2;&#x7D22;&#x81EA;&#x52A8;&#x5316;&#x5B89;&#x5168;&#x6D4B;&#x8BD5;&#x63A2;&#x7D22;&#xFF0C;&#x8BF7;&#x52FF;&#x5C06;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7528;&#x4E8E;&#x975E;&#x6CD5;&#x7528;&#x9014;&#x3002; L2Dwidget.init({});","tags":[{"name":"python3_ssh操作","slug":"python3-ssh操作","permalink":"https://r5mtf.github.io/tags/python3-ssh操作/"}]},{"title":"建博纪念","date":"2018-03-24T16:13:47.411Z","path":"/posts/4a17b156/","text":"&#x5EFA;&#x535A;&#x968F;&#x7B14;&#x80CC;&#x666F; &#x4E3A;&#x4EC0;&#x4E48;&#x642D;&#x5EFA;&#x8FD9;&#x4E2A;&#x535A;&#x5BA2;&#x5462;?&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x82E6;&#x903C;&#x7684;&#x5B89;&#x5168;&#x4ECE;&#x4E1A;&#x8005;&#xFF0C;&#x8111;&#x5BB9;&#x91CF;&#x5C0F;&#xFF0C;&#x7ECF;&#x5E38;&#x4E22;&#x4E86;&#x897F;&#x74DC;&#x6361;&#x4E86;&#x829D;&#x9EBB;&#x3002;&#x518D;&#x8005;&#xFF0C;&#x4EBA;&#x751F;&#x603B;&#x6709;&#x4E9B;&#x610F;&#xFF08;&#x6028;&#xFF09;&#x6C14;&#xFF08;&#x8BCD;&#xFF09;&#x98CE;&#xFF08;&#x8A48;&#xFF09;&#x53D1;&#xFF08;&#x8BED;&#xFF09;&#x3002; &#x4F5C;&#x7528; &#x8BB0;&#x5F55;&#x4E00;&#x4E9B;&#x91CD;&#x8981;&#x77E5;&#x8BC6;&#x3001;&#x5B66;&#x4E60;&#x7ECF;&#x9A8C;&#x3001;&#x5404;&#x79CD;&#x5410;&#x69FD;&#x3002;&#x540C;&#x65F6;&#x4E5F;&#x5206;&#x4EAB;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x4E9B;&#x5B66;&#x4E60;&#x5FC3;&#x5F97;&#xFF0C;&#x4EE5;&#x6B64;&#x4E3A;&#x5E73;&#x53F0;&#x548C;&#x6709;&#x7F18;&#x4EBA;&#x4EA4;&#xFF08;mian&#xFF09;&#x6D41;&#xFF08;ji&#xFF09;&#x3002; L2Dwidget.init({});","tags":[{"name":"随笔","slug":"随笔","permalink":"https://r5mtf.github.io/tags/随笔/"}]}]